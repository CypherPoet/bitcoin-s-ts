
import assert from 'assert'

import * as WalletServer from '../index'
import { NumericContractDescriptor } from '../type/core-types'


const enumOfferHex = 'a71a0043497fd7f826957108f4a30fd9cec3aeba79972084e90ead01ea330900000000fdd82ef40000000000000001fda7101802035945530000000000000001024e4f0000000000000000fda712ccfdd824c81ced8f17bd4431ee1da8055ce0aef280eada37ebf0e8e9b46e607d90272036cd555a5c59d6baf6a4fedb8b046e12141dd7a7f9d6f46b415e61b3e68b721a9d595d1bcfab252c6dd9edd7aea4c5eeeef138f7ff7346061ea40143a9f5ae80baa9fdd822640001d91a28273d1ead8878561c981398f9ad7992634cfc78e32f71ba0a0abe2edb8660763080fdd80609000203594553024e4f30426974636f696e205072696365206973203e3d20243330302c303030206f6e20436f696e6261736520696e20323032310384ff93088a11a6348b1a62068dec6fbde06c27cdd13343fe8799064b0c729a2d00160014a6ddd2eaa6a442c89bd1b3d9121fb63c535dd79a4cbd7b609b6cda9200000000000000010001fda714fd01b33ee2fe21b90d2d5a019d02000000000102b0efe9fef953d3326fd3d8ae6ee3eb0b0a3cb86de2617596c6f6fdde02977bc60200000000ffffffffb0efe9fef953d3326fd3d8ae6ee3eb0b0a3cb86de2617596c6f6fdde02977bc60000000000ffffffff036f997b01000000001600140c0d664b87c20fe4bc7a1382c5352e59993ff5cfe2d001000000000022002054b283568f8614efa7185236e618bacbd4d30fa58a74bf83dfb2e32d7491cad09fbdc70100000000160014f259c2abfbcdd9929cad12ba6b034b068a6f47ef0247304402202815f1dfccbffea58fdc466d7440b776298301bf408f31fd41b6cf1223fc0899022010cff684c03765fc3ef0f06ccd698a83e9349440766681dfd2b94b593ae109e001210355c706c7f99d7eb67a4cbb379f9b5e098f096cc84fca0b7f6a6f0e28180475fc0247304402202255452ab35f277b777db458c69bd19d26eb10f48d8219826f32334cb2e87d7b022072377e73078176e2b5c18a08148657f3f42b872247e99e5feb25caa117baaf610121030e9fff45603614fc03696c40ff42ca92d482bf638e85988315099d8b955073d30000000000000000fffffffd006b000000160014232606c0cb287c1a5f130281ba52eff5ef20d4431b94988e3437066d5bf9bc454e43dd9700000000000000010000000060b57880'
const numericOfferHex = 'a71a0043497fd7f826957108f4a30fd9cec3aeba79972084e90ead01ea330900000000fdd82efd034100000000000186a0fda720540012fda72648000501000000000000000000000001fd753000000000000061a8000001fd88b8000000000000c350000001fd9c4000000000000186a0000001fe0003ffff00000000000186a00000fda724020000fda712fd02dbfdd824fd02d527bd1f768121a074176a1986e2cacd46e6cd992a7b3d5ac3827a3f90b5f12d0753ec47c521966aae316c65a4350e22207ae47286d343de866f19f5eeb7de13815d1bcfab252c6dd9edd7aea4c5eeeef138f7ff7346061ea40143a9f5ae80baa9fdd822fd026f001296d22911c0abd9f2736a45ce0fac39ccd7ded8cbd7a88d160c86e66c37d698a5934f30404cf929aa1f3fe40a04c3c952ca8c6b239c01c9b61676fb7590876b015811222090ee7015017617f468ed05d567e511d9d76d5d115dee863e5f43f8654509a3f2643971573e74f5c5bf5b9d482768a50726383c784af741ae4f59b61ab80d24f5b25dc4c826fd4275715b047dc55b23814d2b81539fcbcd536bd858b0cab6b1a6e7050943a0ee3e01ea005abf62abbd28f8c07362c53d6c187d8eb88dd9b4fd15aad3c3b2271c62bfa8eef0504912164a0f16ca931d59e3dc63d3d92eae714f2abe0f9a0d215357845b3137bf8c96fac0726c82735a23a3baa656229fdcca56ca502cb1623a985e1f6be919c7cfe11155ebf802d4544d4dfc7b354f644e3fb99088aef2c0d71916178c9f3695089e85edfe27044a9cf1a7b821a2a239a196682a0a35ad1a2f60f0f888aa51e4a0a44523592996de3f7f93af6c587f6252b850c562e1bfb97e0a8ee1406ae0c129d34b42a2d8a44597a0147c5cc0dc192beb614664e9b1949f1d95b4ae92ec85617e93b1fb6991b994df3b26ca21aacc908ed102de9988c55cf3a3a70c87e4067ae7648efd6763cd6655ce2c98b5b298ca7eb94fefaf53f58fdd3cbd486da3d79e651dfd392dccf2bd60dfbc708ca171587cda472646709ee6d51650eb2a808796ffd709b041c00afe0e028530f7bb888d90dff6ec6902108e1ec5a1bd1ba33515fdfe1bdb49bd3dfa576de14f83e51ac53a2f72fe6556576ee76cbbfc1e5f09c7ad076fd7ca847962c87dce96dd496d6062da80fdd80a11000200074254432d55534400000000001213446572696269742d4254432d33304d4152323102c7b708b853c8ceff42ef7ebff0ffe852b19de48f0830771b2580daa521ab6fe100160014781caa8f836fac8ba7045a09be9fccdc3c36764fb2ace24e507bab6a000000000000d9030001fda714f4949b1f9004b816fd00de02000000000101baab88aeb340b62f3562db35be4b732d6d4cf8ec4666eaf29572ccf10d39b42c01000000000000000002aa7fb60000000000160014bfe1e07466e377658acd85885960f59a5249e90420a10700000000001600146e6db5e543b8b59c33c886c790fc4a5d846113910247304402200c5426962b5105db84fc049998260d65accfd8a7dab254bed578a3b492efc131022033d9a5ec59bcaf37ab80f3cdf4fdcf3b8da3bf79be955f07d42b9bf412087f4b012102ee30a609e53d408ca441654f2528730f18af62046cea139c76ecc6643d7782940000000000000000fffffffd006b000000160014a18518c4b20412338e917cd087260a1a1401a1d4062ccd68f52745807b1123de12646a6200000000000000010000000061204200'
const contractInfoTLVHex = ''
// Data : https://test.oracle.suredbits.com/announcement/b4663b7a3aa43d228f350b74f8bbe30a96c9aaf344f8f7589e713863d419f3a2
const numericAnnouncementHex = 'fdd824fd016beb851d39afa08cc3d3445ee2696c105f3717bb087346acb95a77dacb9aba17f5f944e6ea8db22f926b7dfd17a306ab927f51b7b26b92c9f9cca4e83d28fb7861a305b66d790ea4afe15b3fb61cae4d77f050e57b41f10f530c48a23dddbe335afdd822fd01050007a5a92a821927337b40a30e152052482f894ff8ecfe3f5a1aa4aa3b6720bf7a2d61d7b210ecd7217d4d342c5e78a99360f920876e461fea671950622ec6a23b9d1c04bc48c6332bfe089fac15b600721f3120cc8d721ba387b59385cef7ea788e7e1cf1bc6cb8d45cf594e7af811bed009c1899439c58a82527684d50b9ed150c1127a45a7e2c93edeb9307e1c2daac7cf6658a488b7159e29e551b9dac141f42e9f41989a0e2bd4064ecf8a09d81285504ae2ec425ff2ab98feb975b4e7e64e70e4e4016a857044d634af12f361f264272a526c08fa39d2116d9136ef00024d870dbd880fdd80a0e00020004556e69740000000000070c6e756d657269634576656e74'
const numericAttestmentHex = 'fdd868fd01fd0c6e756d657269634576656e74a305b66d790ea4afe15b3fb61cae4d77f050e57b41f10f530c48a23dddbe335a0007a5a92a821927337b40a30e152052482f894ff8ecfe3f5a1aa4aa3b6720bf7a2db1cb5a846c809f79d9e8d43164b992fe18dfdecc7092ce917d48b015fef7b75961d7b210ecd7217d4d342c5e78a99360f920876e461fea671950622ec6a23b9dbddb9c6f47ee6aa5bc24d0b407bb4a0be5aca3f9fc01ab8edde04efd95392f221c04bc48c6332bfe089fac15b600721f3120cc8d721ba387b59385cef7ea788e1d97d347bf78394168e883437d226430cef6a8cc1fe06716e1ce348966e42d517e1cf1bc6cb8d45cf594e7af811bed009c1899439c58a82527684d50b9ed150c93e6059547ae921de89918b4caa3d367a0b24757772304db6b1a269bf1ed7ee71127a45a7e2c93edeb9307e1c2daac7cf6658a488b7159e29e551b9dac141f42d86029ee9fed690b2922abece32a4d37aaaa844942d5b2f19833f3bf8dfe605be9f41989a0e2bd4064ecf8a09d81285504ae2ec425ff2ab98feb975b4e7e64e70aee4edf81bee20028a4c67a8fb2a4c4f0a4644e4e25ee7cdb70118340fc713d0e4e4016a857044d634af12f361f264272a526c08fa39d2116d9136ef00024d8775fb82aad5cbe6f655a2f665963a8fb7417cfdc6c5c9e3e013c3c0ffa8439040131013101300130013101300130'
// Data : https://test.oracle.suredbits.com/announcement/63fa7885e3c6052e97956961698cde2b286dc1621544bbd8fcfbd78b2b1dbdcf
const enumAnnouncementHex = 'fdd824a8823cf7a3e449260f46d3d9a5bb0ddf1a367e0d3c9ce8858e16cd783392560bd1c9671314d54b6cb258bc6d85ab8fe238a27feb5a27d75323524a54d712a80b70a305b66d790ea4afe15b3fb61cae4d77f050e57b41f10f530c48a23dddbe335afdd822440001c3b0ecdaeaa3bbbd53386dec623b3a884b0ca2e2777cc62f0b6f891d9226114d614ebae0fdd80611000205546f64617908546f6d6f72726f7708546f6d6f72726f77'
const enumAttestmentHex = 'fdd8687108546f6d6f72726f77a305b66d790ea4afe15b3fb61cae4d77f050e57b41f10f530c48a23dddbe335a0001c3b0ecdaeaa3bbbd53386dec623b3a884b0ca2e2777cc62f0b6f891d9226114dd34e99c8bc6cbeb109e576da6cb6ba1d36bc42883a7ba415cf0d07625421242b05546f646179'

export async function coreTests() {
  console.debug('coreTests()')

  await WalletServer.DecodeOffer(enumOfferHex).then(r => {
    console.debug('DecodeOffer()', r)
    assert.ifError(r.error)

    if (r.result) {
      const o = r.result
      console.debug(' contractInfo', o.contractInfo)
      console.debug(' .contractDescriptor', o.contractInfo.contractDescriptor)
      console.debug(' .oracleInfo', o.contractInfo.oracleInfo)
      console.debug(' .oracleInfo.announcement', o.contractInfo.oracleInfo.announcement)
      console.debug(' .oracleInfo.announcement', o.contractInfo.oracleInfo.announcement.event.descriptor)
    }
  })

  await WalletServer.DecodeOffer(numericOfferHex).then(r => {
    console.debug('DecodeOffer()', r)
    assert.ifError(r.error)

    if (r.result) {
      const o = r.result
      console.debug(' contractInfo', o.contractInfo)
      console.debug(' .contractDescriptor', o.contractInfo.contractDescriptor)
      console.debug(' .contractDescriptor', (<NumericContractDescriptor>o.contractInfo.contractDescriptor).payoutFunction)
      console.debug(' .oracleInfo', o.contractInfo.oracleInfo)
      console.debug(' .oracleInfo.announcement', o.contractInfo.oracleInfo.announcement)
      console.debug(' .oracleInfo.announcement.event.descriptor', o.contractInfo.oracleInfo.announcement.event.descriptor)
    }
  })

  // await WalletServer.DecodeContractInfo(contractInfoTLVHex).then(r => {
  //   console.debug('DecodeContractInfo()', r)
  //   assert.ifError(r.error)
  // })

  await WalletServer.DecodeAnnouncement(enumAnnouncementHex).then(r => {
    console.debug('DecodeAnnouncement()', r)
    assert.ifError(r.error)

    if (r.result) {
      const a = r.result
      console.debug(' event:', a.event)
    }
  })

  await WalletServer.DecodeAttestments(enumAttestmentHex).then(r => {
    console.debug('DecodeAttestments()', r)
    assert.ifError(r.error)
  })
  
  await WalletServer.DecodeAnnouncement(numericAnnouncementHex).then(r => {
    console.debug('DecodeAnnouncement()', r)
    assert.ifError(r.error)

    if (r.result) {
      const a = r.result
      console.debug(' event:', a.event)
    }
  })
  
  await WalletServer.DecodeAttestments(numericAttestmentHex).then(r => {
    console.debug('DecodeAttestments()', r)
    assert.ifError(r.error)
  })


}
